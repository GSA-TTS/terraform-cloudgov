---
name: Pull Third Party Containers, Scan, and Publish to GHCR
on:
  workflow_dispatch:
  schedule:
    - cron: '0 5 * * 0'

jobs:
  pull-and-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
      actions: read
    env:
      GH_REPO: gsa-tts/terraform-cloudgov
    strategy:
      fail-fast: false
      matrix:
        image:
          - name: ghcr.io/sartography/spiffworkflow-backend:v1.0.0
            short-name: spiffarena-backend
          - name: ghcr.io/sartography/spiffworkflow-frontend:v1.0.0
            short-name: spiffarena-frontend
          - name: ghcr.io/sartography/connector-proxy-demo:v1.0.0
            short-name: spiffarena-connector
          - name: ghcr.io/gsa-tts/clamav-rest/clamav:latest
            short-name: clamav-proxy-support

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Pull Docker Image
        run: docker pull ${{ matrix.image.name }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.29.0
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db,ghcr.io/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db,ghcr.io/aquasecurity/trivy-java-db
          TRIVY_SKIP_DB_UPDATE: true
          TRIVY_SKIP_JAVA_DB_UPDATE: true
          TRIVY_DISABLE_VEX_NOTICE: true
        with:
          image-ref: '${{ matrix.image.name }}'
          scan-type: 'image'
          hide-progress: true
          format: 'sarif'
          output: '${{ matrix.image.short-name }}-results.sarif'
          exit-code: 0
          severity: 'CRITICAL,HIGH'
          scanners: 'vuln'
          timeout: 15m0s
          ignore-unfixed: true

      - name: Upload Trivy scan results to GitHub Security tab for Third Party Images
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: '${{ matrix.image.short-name }}-results.sarif'

      - name: Tag Image
        run: |
          date=$(date +%Y%m%d)
          docker tag ${{ matrix.image.name }} ghcr.io/${{ env.GH_REPO }}/${{ matrix.image.short-name }}:latest
          docker tag ${{ matrix.image.name }} ghcr.io/${{ env.GH_REPO }}/${{ matrix.image.short-name }}:$date

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Image
        run: docker push --all-tags ghcr.io/${{ env.GH_REPO }}/${{ matrix.image.short-name }}
