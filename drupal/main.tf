locals {
  tags         = setunion(["terraform-cloudgov-managed"], var.tags)
  s3_name      = "${var.name}-storage"
  rds_name     = "${var.name}-database"
  secrets_name = "${var.name}-secrets"
  drupal_route = coalesce(var.route, "${var.name}.app.cloud.gov")
}

module "database" {
  source = "../database"

  cf_space_id   = var.cf_space.id
  name          = local.rds_name
  rds_plan_name = var.rds_plan_name
  tags          = setunion(local.tags, ["drupal-db"])
}

module "bucket" {
  source = "../s3"

  cf_space_id  = var.cf_space.id
  name         = local.s3_name
  s3_plan_name = var.s3_plan_name
  tags         = setunion(local.tags, ["drupal-bucket"])
}

data "archive_file" "src" {
  type        = "zip"
  source_dir  = var.source_dir
  output_path = "${path.module}/dist/src.zip"
  excludes = setunion(var.extra_excludes, [
    ".git*",
    "terraform/**/*",
    # Ignore directories generated by Composer
    "drush/contrib/**/*",
    "vendor/**/*",
    "web/core/**/*",
    "web/modules/contrib/**/*",
    "web/themes/contrib/**/*",
    "web/profiles/contrib/**/*",
    "web/libraries/**/*",
    # Ignore node modules from USWDS or otherwise.
    "**/node_modules/**/*",
    # Typically, composer generates a .gitignore to ignore the
    # `settings.php` files.  For cloud.gov and Cloud Foundry, no sensitive
    # information is stored in the settings files. Instead, those files
    # have code that parses environment variables for DB and S3
    #
    # Ignore sensitive information [This is a `composer` default]
    # /web/sites/*/settings.php
    "web/sites/settings.dev.php",
    # Ignore Drupal's file directory
    "web/sites/**/files/**/*",

    # Ignore SimpleTest multi-site environment.
    "web/sites/simpletest/**/*",

    # Ignore files generated by PhpStorm
    ".idea/**/*",

    # Code coverage
    ".coverage",

    ".DS_Store",

    "credentials-*.json",
    "*.pem",
    "*.crt",
  ])
}

resource "random_password" "root_password" {
  length  = 20
  special = false
}

resource "random_password" "hash_salt" {
  length  = 32
  special = false
}

resource "cloudfoundry_service_instance" "credentials" {
  name  = local.secrets_name
  space = var.cf_space.id
  type  = "user-provided"
  credentials = jsonencode(merge({
    ROOT_USER_NAME = "root",
    ROOT_USER_PASS = random_password.root_password.result,
    HASH_SALT      = random_password.hash_salt.result
  }, var.credentials))
  tags = setunion(local.tags, ["drupal-secrets"])
}

resource "cloudfoundry_app" "app" {
  space_name = var.cf_space.name
  org_name   = var.cf_org_name

  name             = var.name
  buildpacks       = ["https://github.com/cloudfoundry/apt-buildpack.git", "php_buildpack"]
  disk_quota       = "2G"
  memory           = var.app_memory
  instances        = var.app_instances
  strategy         = "rolling"
  timeout          = 180
  path             = data.archive_file.src.output_path
  source_code_hash = data.archive_file.src.output_base64sha256

  routes = [{ route = local.drupal_route }]

  environment = merge({
    PHP_INI_SCAN_DIR       = "/home/vcap/app/php/etc/:/home/vcap/app/php/etc/php.ini.d/"
    DATABASE_INSTANCE_NAME = local.rds_name
    STORAGE_INSTANCE_NAME  = local.s3_name
    SECRETS_INSTANCE_NAME  = local.secrets_name
  }, var.app_environment)

  service_bindings = [
    { service_instance = local.secrets_name },
    { service_instance = local.rds_name },
    { service_instance = local.s3_name }
  ]

  depends_on = [module.database]
}
